# .envrc template for AI Agent projects
# Copy this to your project root as '.envrc' and run 'direnv allow'

# Use AI layout (includes Python venv + Rust settings)
layout_ai
layout_rust

# Set development mode
env_mode development

# AI/ML specific environment
export PYTHONPATH="."
export TOKENIZERS_PARALLELISM=false

# Model and data paths
export MODELS_DIR="${PWD}/models"
export DATA_DIR="${PWD}/data"
export CACHE_DIR="${PWD}/.cache"

# Hugging Face settings
export HF_HOME="${CACHE_DIR}/huggingface"
export TRANSFORMERS_CACHE="${CACHE_DIR}/transformers"
export HF_DATASETS_CACHE="${CACHE_DIR}/datasets"

# CUDA settings (if available)
if command -v nvcc >/dev/null 2>&1; then
    export CUDA_VISIBLE_DEVICES="0"
    export TORCH_USE_CUDA_DSA=1
fi

# OpenAI API (load from secrets)
setup_api_keys

# Database for agent state/memory
setup_database postgres

# Logging
export RUST_LOG="debug,tokenizers=warn,transformers=warn"
export PYTHONPATH=".:./src"

# Development tools
PATH_add "./scripts"
PATH_add "./tools"

# Load project environment
dotenv .env
load_secrets

echo "ðŸ¤– AI Agent development environment loaded"
echo "Python: $(python --version)"
echo "Rust: $(rustc --version)"
if [[ -n "${OPENAI_API_KEY:-}" ]]; then
    echo "âœ… OpenAI API key loaded"
fi