#!/usr/bin/env bash
#
# Install/ensure packages are present (minimal base system).
# Does NOT automatically upgrade - use run_weekly_safe-upgrades.sh for that.
# Runs on every `cz apply` to ensure minimal tools are installed.

set -euo pipefail

# Choose package set based on install mode
{{- if eq .installMode "full" }}
PACKAGE_FILE="packages.yaml"
{{- else }}
PACKAGE_FILE="packages-minimal.yaml"
{{- end }}
IFS=$'\n\t'

############################################
# Minimal UX helpers
############################################
run_with_spinner() {
  local msg="$1"; shift
  local pid spin='-\|/'
  echo -ne "${msg} … "
  "$@" &>/tmp/spinner.log & pid=$!
  local i=0
  while kill -0 "$pid" 2>/dev/null; do
    printf "\r%s %s" "${msg}" "${spin:i++%${#spin}:1}"
    sleep 0.15
  done
  wait "$pid" && echo -e "\r${msg} … ✅" || {
    echo -e "\r${msg} … ❌  (details below)"; tail -40 /tmp/spinner.log; exit 1; }
}

echo "🔄  Ensuring minimal packages are installed…"

############################################
# Update Homebrew packages
############################################
if command -v brew >/dev/null 2>&1; then
  # shellcheck disable=SC2046
  # shellcheck disable=SC1091
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
  
  run_with_spinner "brew update" brew update
  {{- if eq .installMode "full" }}
  run_with_spinner "brew install/upgrade packages" brew install --formula --force-bottle {{ .packages.brew | join " " }} || true
  {{- else }}
  run_with_spinner "brew install packages (minimal)" brew install --formula {{ index (includeTemplate "packages-minimal.yaml" | fromYaml) "packages" "brew" | join " " }} || true
  {{- end }}
fi

############################################
# Update Zsh plugins (git pull)
############################################
ZSH_CUSTOM=${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}
PLUGINS_DIR="$ZSH_CUSTOM/plugins"

if [ -d "$PLUGINS_DIR/zsh-autosuggestions" ]; then
  run_with_spinner "Update zsh-autosuggestions" bash -c \
    "cd '$PLUGINS_DIR/zsh-autosuggestions' && git pull --quiet"
fi

if [ -d "$PLUGINS_DIR/zsh-syntax-highlighting" ]; then
  run_with_spinner "Update zsh-syntax-highlighting" bash -c \
    "cd '$PLUGINS_DIR/zsh-syntax-highlighting' && git pull --quiet"
fi

# Update Powerlevel10k theme
THEME_DIR="${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k"
if [ -d "$THEME_DIR" ]; then
  run_with_spinner "Update Powerlevel10k theme" bash -c \
    "cd '$THEME_DIR' && git pull --quiet"
fi

echo "✅  Package updates complete."